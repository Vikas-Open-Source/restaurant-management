openapi: 3.0.3
info:
  title: Restaurant Orders API
  description: API for managing restaurant orders
  version: 0.0.1
servers:
  - url: '{host}/api'
    variables:
      host:
        default: http://localhost:8080
paths:
  /orders/v1:
    get:
      summary: Get all orders
      description: Retrieve a list of all orders
      parameters:
        - in: query
          name: status
          schema:
            $ref: '#/components/schemas/orderStatus'
          description: Filter orders by status
      responses:
        '200':
          description: A list of orders
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Order'
        '400':
          $ref: '#/components/responses/badRequest'
    post:
      summary: Create a new order
      description: Add a new order to the system
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Order'
      responses:
        '201':
          description: Order created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'
  /orders/v1/{orderId}:
    get:
      summary: Get an order by ID
      description: Retrieve a specific order by its ID
      parameters:
        - in: path
          name: orderId
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Order details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'
        '400':
          $ref: '#/components/responses/badRequest'
    put:
      summary: Update an order
      description: Update the details of an existing order
      parameters:
        - in: path
          name: orderId
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Order'
      responses:
        '200':
          description: Order updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'
        '400':
          $ref: '#/components/responses/badRequest'
    delete:
      summary: Delete an order
      description: Remove an order from the system
      parameters:
        - in: path
          name: orderId
          required: true
          schema:
            type: string
      responses:
        '204':
          description: Order deleted successfully
        '400':
          $ref: '#/components/responses/badRequest'
components:
  schemas:
    Order:
      type: object
      properties:
        id:
          type: string
        menuItemId:
          type: string
        userId:
          type: string
        status:
          $ref: '#/components/schemas/orderStatus'
        priority:
          type: string
          enum: 
              - LOW
              - MEDIUM
              - HIGH
        createdDate:
          type: string
          format: date-time
        updatedDate:
          type: string
          format: date-time
    orderStatus:
      type: string
      enum: 
        - RECEIVED
        - PAYMENT_COMPLETED
        - UNDER_PREPERATION
        - READY
        - DISPATCHED
        - DELIVERED
  responses:
    badRequest:
      description: Bad request
      content:
        application/json:
          schema:
            type: object
